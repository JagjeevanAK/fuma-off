// @ts-nocheck -- skip type checking
import * as docs_20 from "../content/docs/(api)/v3/write-requests/post-api-v3-product_revert.mdx?collection=docs&hash=1750911860461"
import * as docs_19 from "../content/docs/(api)/v3/write-requests/post-api-v3-product-barcode-images.mdx?collection=docs&hash=1750911860461"
import * as docs_18 from "../content/docs/(api)/v3/write-requests/patch-api-v3-product-barcode.mdx?collection=docs&hash=1750911860461"
import * as docs_17 from "../content/docs/(api)/v3/write-requests/delete-api-v3-product-barcode-images-uploaded-imgid.mdx?collection=docs&hash=1750911860461"
import * as docs_16 from "../content/docs/(api)/v3/read-requests/get-product-by-barcode.mdx?collection=docs&hash=1750911860461"
import * as docs_15 from "../content/docs/(api)/v3/read-requests/get-api-v3-taxonomy_suggestions-taxonomy.mdx?collection=docs&hash=1750911860461"
import * as docs_14 from "../content/docs/(api)/v3/read-requests/get-api-v3-tag-tagtype-tag_or_tagid.mdx?collection=docs&hash=1750911860461"
import * as docs_13 from "../content/docs/(api)/v2/write-requests/post-cgi-product_jqm2.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_12 from "../content/docs/(api)/v2/write-requests/post-cgi-product_image_unselect.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_11 from "../content/docs/(api)/v2/write-requests/post-cgi-product_image_crop.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_10 from "../content/docs/(api)/v2/write-requests/get-cgi-product_image_upload.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_9 from "../content/docs/(api)/v2/write-requests/get-cgi-product_image_crop.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_8 from "../content/docs/(api)/v2/read-requests/get-search.mdx?collection=docs&hash=1750911860461"
import * as docs_7 from "../content/docs/(api)/v2/read-requests/get-product-by-barcode.mdx?collection=docs&hash=1750911860461"
import * as docs_6 from "../content/docs/(api)/v2/read-requests/get-cgi-suggest.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_5 from "../content/docs/(api)/v2/read-requests/get-cgi-nutrients.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_4 from "../content/docs/(api)/v2/read-requests/get-cgi-ingredients.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_3 from "../content/docs/(api)/v2/personal-search/get-preferences.mdx?collection=docs&hash=1750911860461"
import * as docs_2 from "../content/docs/(api)/v2/personal-search/get-attribute-groups.mdx?collection=docs&hash=1750911860461"
import * as docs_1 from "../content/docs/(api)/v2/authentication/get-cgi-session.pl.mdx?collection=docs&hash=1750911860461"
import * as docs_0 from "../content/docs/index.mdx?collection=docs&hash=1750911860461"
import * as meta_4 from "../content/docs/(api)/v3/meta.json?collection=meta&hash=1750911860461"
import * as meta_3 from "../content/docs/(api)/v2/meta.json?collection=meta&hash=1750911860461"
import * as meta_2 from "../content/docs/(api)/apis/meta.json?collection=meta&hash=1750911860461"
import * as meta_1 from "../content/docs/(api)/meta.json?collection=meta&hash=1750911860461"
import * as meta_0 from "../content/docs/meta.json?collection=meta&hash=1750911860461"
import { _runtime } from "fumadocs-mdx"
import * as _source from "../source.config"
export const docs = _runtime.doc<typeof _source.docs>([{ info: {"path":"index.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/index.mdx"}, data: docs_0 }, { info: {"path":"(api)/v2/authentication/get-cgi-session.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/authentication/get-cgi-session.pl.mdx"}, data: docs_1 }, { info: {"path":"(api)/v2/personal-search/get-attribute-groups.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/personal-search/get-attribute-groups.mdx"}, data: docs_2 }, { info: {"path":"(api)/v2/personal-search/get-preferences.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/personal-search/get-preferences.mdx"}, data: docs_3 }, { info: {"path":"(api)/v2/read-requests/get-cgi-ingredients.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/read-requests/get-cgi-ingredients.pl.mdx"}, data: docs_4 }, { info: {"path":"(api)/v2/read-requests/get-cgi-nutrients.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/read-requests/get-cgi-nutrients.pl.mdx"}, data: docs_5 }, { info: {"path":"(api)/v2/read-requests/get-cgi-suggest.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/read-requests/get-cgi-suggest.pl.mdx"}, data: docs_6 }, { info: {"path":"(api)/v2/read-requests/get-product-by-barcode.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/read-requests/get-product-by-barcode.mdx"}, data: docs_7 }, { info: {"path":"(api)/v2/read-requests/get-search.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/read-requests/get-search.mdx"}, data: docs_8 }, { info: {"path":"(api)/v2/write-requests/get-cgi-product_image_crop.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/write-requests/get-cgi-product_image_crop.pl.mdx"}, data: docs_9 }, { info: {"path":"(api)/v2/write-requests/get-cgi-product_image_upload.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/write-requests/get-cgi-product_image_upload.pl.mdx"}, data: docs_10 }, { info: {"path":"(api)/v2/write-requests/post-cgi-product_image_crop.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/write-requests/post-cgi-product_image_crop.pl.mdx"}, data: docs_11 }, { info: {"path":"(api)/v2/write-requests/post-cgi-product_image_unselect.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/write-requests/post-cgi-product_image_unselect.pl.mdx"}, data: docs_12 }, { info: {"path":"(api)/v2/write-requests/post-cgi-product_jqm2.pl.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/write-requests/post-cgi-product_jqm2.pl.mdx"}, data: docs_13 }, { info: {"path":"(api)/v3/read-requests/get-api-v3-tag-tagtype-tag_or_tagid.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/read-requests/get-api-v3-tag-tagtype-tag_or_tagid.mdx"}, data: docs_14 }, { info: {"path":"(api)/v3/read-requests/get-api-v3-taxonomy_suggestions-taxonomy.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/read-requests/get-api-v3-taxonomy_suggestions-taxonomy.mdx"}, data: docs_15 }, { info: {"path":"(api)/v3/read-requests/get-product-by-barcode.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/read-requests/get-product-by-barcode.mdx"}, data: docs_16 }, { info: {"path":"(api)/v3/write-requests/delete-api-v3-product-barcode-images-uploaded-imgid.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/write-requests/delete-api-v3-product-barcode-images-uploaded-imgid.mdx"}, data: docs_17 }, { info: {"path":"(api)/v3/write-requests/patch-api-v3-product-barcode.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/write-requests/patch-api-v3-product-barcode.mdx"}, data: docs_18 }, { info: {"path":"(api)/v3/write-requests/post-api-v3-product-barcode-images.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/write-requests/post-api-v3-product-barcode-images.mdx"}, data: docs_19 }, { info: {"path":"(api)/v3/write-requests/post-api-v3-product_revert.mdx","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/write-requests/post-api-v3-product_revert.mdx"}, data: docs_20 }]);
export const meta = _runtime.meta<typeof _source.meta>([{ info: {"path":"meta.json","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/meta.json"}, data: meta_0 }, { info: {"path":"(api)/meta.json","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/meta.json"}, data: meta_1 }, { info: {"path":"(api)/apis/meta.json","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/apis/meta.json"}, data: meta_2 }, { info: {"path":"(api)/v2/meta.json","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v2/meta.json"}, data: meta_3 }, { info: {"path":"(api)/v3/meta.json","absolutePath":"/Users/jagjeevankashid/Developer/gsoc25/OpenApi-spec/content/docs/(api)/v3/meta.json"}, data: meta_4 }]);